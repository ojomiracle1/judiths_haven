{"version":3,"file":"static/js/886.67bc7c18.chunk.js","mappings":"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","sources":["pages/admin/AdminContactMessages.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AdminContactMessages = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [replyingId, setReplyingId] = useState(null);\r\n  const [replyText, setReplyText] = useState('');\r\n  const [replyLoading, setReplyLoading] = useState(false);\r\n  const [replySuccess, setReplySuccess] = useState('');\r\n  const { user } = useSelector((state) => state.auth);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.isAdmin) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const res = await fetch('/api/contact', {\r\n          headers: { Authorization: `Bearer ${user.token}` },\r\n        });\r\n        const data = await res.json();\r\n        // Ensure data is always an array\r\n        setMessages(Array.isArray(data) ? data : []);\r\n      } catch (err) {\r\n        setMessages([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchMessages();\r\n  }, [user, navigate]);\r\n\r\n  const handleReply = async (id, email, name) => {\r\n    if (!replyText.trim()) return;\r\n    setReplyLoading(true);\r\n    setReplySuccess('');\r\n    try {\r\n      const res = await fetch(`/api/contact/${id}/reply`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n        body: JSON.stringify({ reply: replyText }),\r\n      });\r\n      if (res.ok) {\r\n        setReplySuccess('Reply sent!');\r\n        setReplyingId(null);\r\n        setReplyText('');\r\n        // Optionally refresh messages\r\n      } else {\r\n        setReplySuccess('Failed to send reply.');\r\n      }\r\n    } catch {\r\n      setReplySuccess('Failed to send reply.');\r\n    } finally {\r\n      setReplyLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen bg-gradient-to-br from-pink-50 via-blue-50 to-green-50\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-pink-50 via-blue-50 to-green-50 py-12 px-4\">\r\n      <div className=\"w-full max-w-4xl bg-white rounded-3xl shadow-xl p-8 border border-pink-100\">\r\n        <h1 className=\"text-3xl font-extrabold text-pink-600 tracking-tight drop-shadow-lg text-center mb-8\">Contact Messages</h1>\r\n        {messages.length === 0 ? (\r\n          <div className=\"text-center py-8\">\r\n            <p className=\"text-gray-500\">No messages found.</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-6\">\r\n            {messages.map((msg) => (\r\n              <div key={msg._id} className=\"bg-blue-50 rounded-xl p-6 shadow flex flex-col gap-2\">\r\n                <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-2\">\r\n                  <div>\r\n                    <span className=\"font-semibold text-primary-700\">{msg.name}</span> <span className=\"text-gray-500\">({msg.email})</span>\r\n                  </div>\r\n                  <span className=\"text-xs text-gray-400\">{new Date(msg.createdAt).toLocaleString()}</span>\r\n                </div>\r\n                <div className=\"text-gray-700 mt-2\">{msg.message}</div>\r\n                {/* Reply UI */}\r\n                <div className=\"mt-2 flex flex-col sm:flex-row gap-2 items-center\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a reply...\"\r\n                    value={replyingId === msg._id ? replyText : ''}\r\n                    onChange={e => setReplyText(e.target.value)}\r\n                    className=\"input-premium flex-1\"\r\n                    disabled={replyingId !== msg._id}\r\n                  />\r\n                  {replyingId === msg._id ? (\r\n                    <button onClick={() => handleReply(msg._id, msg.email, msg.name)} className=\"btn-gradient px-4 py-2 rounded-xl font-semibold text-sm shadow hover:scale-105 transition-all\" disabled={replyLoading}>\r\n                      {replyLoading ? 'Sending...' : 'Send'}\r\n                    </button>\r\n                  ) : (\r\n                    <button onClick={() => setReplyingId(msg._id)} className=\"btn-gradient px-4 py-2 rounded-xl font-semibold text-sm shadow hover:scale-105 transition-all\">Reply</button>\r\n                  )}\r\n                  {replySuccess && replyingId === msg._id && (\r\n                    <span className=\"text-green-600 text-xs ml-2\">{replySuccess}</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminContactMessages;\r\n"],"names":["AdminContactMessages","messages","setMessages","useState","loading","setLoading","replyingId","setReplyingId","replyText","setReplyText","replyLoading","setReplyLoading","replySuccess","setReplySuccess","user","useSelector","state","auth","navigate","useNavigate","useEffect","isAdmin","async","res","fetch","headers","Authorization","concat","token","data","json","Array","isArray","err","fetchMessages","_jsx","className","children","_jsxs","length","map","msg","name","email","Date","createdAt","toLocaleString","message","type","placeholder","value","_id","onChange","e","target","disabled","onClick","id","trim","method","body","JSON","stringify","reply","ok","_unused","handleReply"],"sourceRoot":""}