{"version":3,"file":"static/js/925.035a785e.chunk.js","mappings":"sPAMA,MA0IA,EA1IqBA,KACnB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,YAAa,GACbC,MAAO,MAGH,GAAEC,IAAOC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,UAAEC,EAAS,QAAEC,EAAO,QAAEC,EAAO,UAAEC,IAAcC,EAAAA,EAAAA,KAChDC,GAAUA,EAAMC,YAEb,KAAEC,IAASH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMG,QAE9CC,EAAAA,EAAAA,YAAU,KACHF,GACHX,EAAS,UAGPK,GACFS,EAAAA,GAAMC,MAAMT,GAGVC,IACFL,GAASc,EAAAA,EAAAA,OACThB,EAAS,sBAGPF,GACFI,GAASe,EAAAA,EAAAA,IAAgBnB,IACtBoB,SACAC,MAAMT,IACLjB,EAAY,CACVE,KAAMe,EAASf,KACfC,YAAac,EAASd,YACtBC,MAAOa,EAASb,WAGnBuB,OAAOL,IACND,EAAAA,GAAMC,MAAMA,QAGjB,CAACJ,EAAMX,EAAUK,EAASC,EAASC,EAAWL,EAAUJ,IAE3D,MAAMuB,EAAgBC,IACpB7B,GAAW8B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACR/B,GAAQ,IACX,CAAC8B,EAAEE,OAAO7B,MAAO2B,EAAEE,OAAOC,UA8B9B,OAAIrB,GAEAsB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uGAAsGC,UACnHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAMnBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kHAAiHC,UAC9HC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4EAA2EC,SAAA,EACxFF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uFAAsFC,SAAE9B,EAAK,gBAAkB,qBAC7H+B,EAAAA,EAAAA,MAAA,QAAMC,SAtCUR,IACpBA,EAAES,iBAEEjC,EACFI,GAAS8B,EAAAA,EAAAA,IAAe,CAAElC,KAAImC,aAAczC,KACzC0B,SACAC,MAAK,KACJL,EAAAA,GAAMoB,QAAQ,iCACdlC,EAAS,wBAEVoB,OAAOL,IACND,EAAAA,GAAMC,MAAMA,MAGhBb,GAASiC,EAAAA,EAAAA,IAAe3C,IACrB0B,SACAC,MAAK,KACJL,EAAAA,GAAMoB,QAAQ,iCACdlC,EAAS,wBAEVoB,OAAOL,IACND,EAAAA,GAAMC,MAAMA,OAiBgBY,UAAU,YAAWC,SAAA,EACjDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,OAAOT,UAAU,sDAAqDC,SAAC,UACtFF,EAAAA,EAAAA,KAAA,SACE5B,GAAG,OACHH,KAAK,OACL0C,KAAK,OACLC,UAAQ,EACRX,UAAU,gBACVF,MAAOjC,EAASG,KAChB4C,SAAUlB,QAGdQ,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,cAAcT,UAAU,sDAAqDC,SAAC,iBAC7FF,EAAAA,EAAAA,KAAA,YACE5B,GAAG,cACHH,KAAK,cACL6C,KAAK,IACLF,UAAQ,EACRX,UAAU,6BACVF,MAAOjC,EAASI,YAChB2C,SAAUlB,QAGdQ,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,QAAQT,UAAU,sDAAqDC,SAAC,eACvFF,EAAAA,EAAAA,KAAA,SACE5B,GAAG,QACHH,KAAK,QACL0C,KAAK,OACLV,UAAU,gBACVF,MAAOjC,EAASK,MAChB0C,SAAUlB,QAGdK,EAAAA,EAAAA,KAAA,UACEW,KAAK,SACLV,UAAU,kHAAiHC,SAE1H9B,EAAK,kBAAoB,4B","sources":["pages/admin/CategoryForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { createCategory, updateCategory, getCategoryById, reset } from '../../features/category/categorySlice';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst CategoryForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    image: '',\r\n  });\r\n\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, isError, message, isSuccess } = useSelector(\r\n    (state) => state.category\r\n  );\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate('/login');\r\n    }\r\n\r\n    if (isError) {\r\n      toast.error(message);\r\n    }\r\n\r\n    if (isSuccess) {\r\n      dispatch(reset());\r\n      navigate('/admin/categories');\r\n    }\r\n\r\n    if (id) {\r\n      dispatch(getCategoryById(id))\r\n        .unwrap()\r\n        .then((category) => {\r\n          setFormData({\r\n            name: category.name,\r\n            description: category.description,\r\n            image: category.image,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error);\r\n        });\r\n    }\r\n  }, [user, navigate, isError, message, isSuccess, dispatch, id]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (id) {\r\n      dispatch(updateCategory({ id, categoryData: formData }))\r\n        .unwrap()\r\n        .then(() => {\r\n          toast.success('Category updated successfully');\r\n          navigate('/admin/categories');\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error);\r\n        });\r\n    } else {\r\n      dispatch(createCategory(formData))\r\n        .unwrap()\r\n        .then(() => {\r\n          toast.success('Category created successfully');\r\n          navigate('/admin/categories');\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen bg-gradient-to-br from-pink-50 via-blue-50 to-green-50\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-pink-50 via-blue-50 to-green-50 py-12 px-4\">\r\n      <div className=\"w-full max-w-xl bg-white rounded-3xl shadow-xl p-8 border border-pink-100\">\r\n        <h1 className=\"text-3xl font-extrabold text-pink-600 tracking-tight drop-shadow-lg text-center mb-8\">{id ? 'Edit Category' : 'Create Category'}</h1>\r\n        <form onSubmit={handleSubmit} className=\"space-y-8\">\r\n          <div>\r\n            <label htmlFor=\"name\" className=\"block text-base font-semibold text-primary-700 mb-1\">Name</label>\r\n            <input\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              required\r\n              className=\"input-premium\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"description\" className=\"block text-base font-semibold text-primary-700 mb-1\">Description</label>\r\n            <textarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              rows=\"3\"\r\n              required\r\n              className=\"input-premium min-h-[90px]\"\r\n              value={formData.description}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"image\" className=\"block text-base font-semibold text-primary-700 mb-1\">Image URL</label>\r\n            <input\r\n              id=\"image\"\r\n              name=\"image\"\r\n              type=\"text\"\r\n              className=\"input-premium\"\r\n              value={formData.image}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full py-3 px-4 btn-gradient font-semibold rounded-xl shadow-lg hover:scale-[1.03] transition-all duration-200\"\r\n          >\r\n            {id ? 'Update Category' : 'Create Category'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;"],"names":["CategoryForm","formData","setFormData","useState","name","description","image","id","useParams","navigate","useNavigate","dispatch","useDispatch","isLoading","isError","message","isSuccess","useSelector","state","category","user","auth","useEffect","toast","error","reset","getCategoryById","unwrap","then","catch","handleChange","e","_objectSpread","target","value","_jsx","className","children","_jsxs","onSubmit","preventDefault","updateCategory","categoryData","success","createCategory","htmlFor","type","required","onChange","rows"],"sourceRoot":""}