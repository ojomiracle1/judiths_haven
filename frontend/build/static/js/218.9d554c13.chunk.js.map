{"version":3,"file":"static/js/218.9d554c13.chunk.js","mappings":"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","sources":["components/Spinner.js","pages/admin/ProductForm.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"flex justify-center items-center min-h-[40vh] sm:min-h-screen w-full\">\r\n      <div className=\"animate-spin rounded-full h-8 w-8 sm:h-12 sm:w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { createProduct, updateProduct, getProductById, reset } from '../../features/product/productSlice';\r\nimport { toast } from 'react-toastify';\r\nimport { getCategories } from '../../features/category/categorySlice';\r\nimport Spinner from '../../components/Spinner';\r\nimport api from '../../utils/axios';\r\nimport * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required('Name is required'),\r\n  price: yup.number().min(0, 'Price must be a positive number').required('Price is required'),\r\n  brand: yup.string().required('Brand is required'),\r\n  category: yup.string().required('Category is required'),\r\n  countInStock: yup.number().min(0, 'Stock must be a non-negative integer').required('Stock is required'),\r\n  description: yup.string().required('Description is required'),\r\n});\r\n\r\nconst ProductForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    images: [],\r\n    brand: '',\r\n    category: '',\r\n    countInStock: '',\r\n    sizes: [],\r\n    colors: [],\r\n    features: [], // new\r\n    gender: 'unisex', // new\r\n    featured: false, // new\r\n    discount: 0, // new\r\n    discountPrice: '', // new\r\n  });\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [sizeInput, setSizeInput] = useState('');\r\n  const [colorInput, setColorInput] = useState('');\r\n  const [featureInput, setFeatureInput] = useState(''); // new\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, isError, message, isSuccess } = useSelector((state) => state.product);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { categories } = useSelector((state) => state.category);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate('/login');\r\n    }\r\n\r\n    if (isError) {\r\n      toast.error(message);\r\n    }\r\n\r\n    if (isSuccess) {\r\n      dispatch(reset());\r\n      navigate('/admin/products');\r\n    }\r\n\r\n    dispatch(getCategories());\r\n\r\n    if (id) {\r\n      dispatch(getProductById(id))\r\n        .unwrap()\r\n        .then((product) => {\r\n          setFormData({\r\n            name: product.name,\r\n            description: product.description,\r\n            price: product.price,\r\n            images: product.images || [],\r\n            brand: product.brand,\r\n            category: product.category,\r\n            countInStock: product.countInStock,\r\n            sizes: product.sizes || [],\r\n            colors: product.colors || [],\r\n            features: product.features || [], // new\r\n            gender: product.gender || 'unisex', // new\r\n            featured: product.featured || false, // new\r\n            discount: product.discount || 0, // new\r\n            discountPrice: product.discountPrice || '', // new\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error);\r\n        });\r\n    }\r\n  }, [user, navigate, isError, message, isSuccess, dispatch, id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    if (type === 'checkbox') {\r\n      setFormData({ ...formData, [name]: checked });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const uploadPromises = files.map(async (file) => {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        };\r\n\r\n        const { data } = await api.post('/api/upload', formData, config);\r\n        return data.path;\r\n      });\r\n\r\n      const uploadedPaths = await Promise.all(uploadPromises);\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        images: [...prev.images, ...uploadedPaths],\r\n      }));\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n      toast.error('Upload failed');\r\n    }\r\n  };\r\n\r\n  const removeImage = (index) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      images: prev.images.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addSize = () => {\r\n    if (sizeInput.trim()) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        sizes: [...prev.sizes, sizeInput.trim()],\r\n      }));\r\n      setSizeInput('');\r\n    }\r\n  };\r\n\r\n  const removeSize = (index) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      sizes: prev.sizes.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addColor = () => {\r\n    if (colorInput.trim()) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        colors: [...prev.colors, colorInput.trim()],\r\n      }));\r\n      setColorInput('');\r\n    }\r\n  };\r\n\r\n  const removeColor = (index) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      colors: prev.colors.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const addFeature = () => {\r\n    if (featureInput.trim()) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        features: [...prev.features, featureInput.trim()],\r\n      }));\r\n      setFeatureInput('');\r\n    }\r\n  };\r\n\r\n  const removeFeature = (index) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      features: prev.features.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await schema.validate(formData, { abortEarly: false });\r\n      setErrors({});\r\n    } catch (validationError) {\r\n      const newErrors = {};\r\n      validationError.inner.forEach(err => {\r\n        newErrors[err.path] = err.message;\r\n      });\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n    const productData = {\r\n      name: formData.name,\r\n      description: formData.description,\r\n      price: Number(formData.price),\r\n      images: formData.images,\r\n      brand: formData.brand,\r\n      category: formData.category,\r\n      countInStock: Number(formData.countInStock),\r\n      sizes: formData.sizes,\r\n      colors: formData.colors,\r\n      features: formData.features, // new\r\n      gender: formData.gender, // new\r\n      featured: formData.featured, // new\r\n      discount: Number(formData.discount), // new\r\n      discountPrice: formData.discountPrice ? Number(formData.discountPrice) : null, // new\r\n    };\r\n\r\n    if (id) {\r\n      dispatch(updateProduct({ id, productData }))\r\n        .unwrap()\r\n        .then(() => {\r\n          toast.success('Product updated successfully');\r\n          navigate('/admin/products');\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error);\r\n        });\r\n    } else {\r\n      dispatch(createProduct(productData))\r\n        .unwrap()\r\n        .then(() => {\r\n          toast.success('Product created successfully');\r\n          navigate('/admin/products');\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen bg-gradient-to-br from-pink-50 via-blue-50 to-green-50\">\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-pink-50 via-blue-50 to-green-50 py-12 px-4\">\r\n      <div className=\"w-full max-w-2xl bg-white rounded-3xl shadow-xl p-8 border border-pink-100\">\r\n        <h1 className=\"text-3xl font-extrabold mb-8 text-pink-600 tracking-tight drop-shadow-lg text-center\">\r\n          {id ? 'Edit Product' : 'Create Product'}\r\n        </h1>\r\n        <form onSubmit={handleSubmit} className=\"space-y-10\">\r\n          {/* Basic Info */}\r\n          <div className=\"haven-section\">\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8\">\r\n              <div>\r\n                <label htmlFor=\"name\" className=\"block text-base font-semibold text-primary-700 mb-1\">Name</label>\r\n                <input\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"input-premium\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.name && <div className=\"text-red-500 text-sm mt-1\">{errors.name}</div>}\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"brand\" className=\"block text-base font-semibold text-primary-700 mb-1\">Brand</label>\r\n                <input\r\n                  id=\"brand\"\r\n                  name=\"brand\"\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"input-premium\"\r\n                  value={formData.brand}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.brand && <div className=\"text-red-500 text-sm mt-1\">{errors.brand}</div>}\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-6\">\r\n              <label htmlFor=\"description\" className=\"block text-base font-semibold text-primary-700 mb-1\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                rows=\"3\"\r\n                required\r\n                className=\"input-premium min-h-[90px]\"\r\n                value={formData.description}\r\n                onChange={handleChange}\r\n              />\r\n              {errors.description && <div className=\"text-red-500 text-sm mt-1\">{errors.description}</div>}\r\n            </div>\r\n          </div>\r\n          {/* Pricing & Stock */}\r\n          <div className=\"haven-section\">\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8\">\r\n              <div>\r\n                <label htmlFor=\"price\" className=\"block text-base font-semibold text-primary-700 mb-1\">Price</label>\r\n                <input\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  type=\"number\"\r\n                  required\r\n                  className=\"input-premium\"\r\n                  value={formData.price}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.price && <div className=\"text-red-500 text-sm mt-1\">{errors.price}</div>}\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"countInStock\" className=\"block text-base font-semibold text-primary-700 mb-1\">Stock</label>\r\n                <input\r\n                  id=\"countInStock\"\r\n                  name=\"countInStock\"\r\n                  type=\"number\"\r\n                  required\r\n                  className=\"input-premium\"\r\n                  value={formData.countInStock}\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.countInStock && <div className=\"text-red-500 text-sm mt-1\">{errors.countInStock}</div>}\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8 mt-6\">\r\n              <div>\r\n                <label htmlFor=\"discount\" className=\"block text-base font-semibold text-primary-700 mb-1\">Discount (%)</label>\r\n                <input\r\n                  id=\"discount\"\r\n                  name=\"discount\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  className=\"input-premium\"\r\n                  value={formData.discount}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"discountPrice\" className=\"block text-base font-semibold text-primary-700 mb-1\">Discount Price</label>\r\n                <input\r\n                  id=\"discountPrice\"\r\n                  name=\"discountPrice\"\r\n                  type=\"number\"\r\n                  className=\"input-premium\"\r\n                  value={formData.discountPrice}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Category & Images */}\r\n          <div className=\"haven-section\">\r\n            <div className=\"mb-6\">\r\n              <label htmlFor=\"category\" className=\"block text-base font-semibold text-primary-700 mb-1\">Category</label>\r\n              <select\r\n                id=\"category\"\r\n                name=\"category\"\r\n                required\r\n                className=\"input-premium\"\r\n                value={formData.category}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\">Select Category</option>\r\n                {categories.map((cat) => (\r\n                  <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n                ))}\r\n              </select>\r\n              {errors.category && <div className=\"text-red-500 text-sm mt-1\">{errors.category}</div>}\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-base font-semibold text-primary-700 mb-1\">Images</label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  type=\"file\"\r\n                  multiple\r\n                  accept=\"image/*\"\r\n                  onChange={uploadFileHandler}\r\n                  className=\"input-premium file:bg-gradient-to-r file:from-pink-200 file:to-blue-200 file:text-primary-700 file:rounded-lg file:shadow file:font-semibold file:px-4 file:py-2 hover:file:from-pink-300 hover:file:to-blue-300\"\r\n                />\r\n                {uploading && <Spinner />}\r\n              </div>\r\n              <div className=\"mt-4 grid grid-cols-2 gap-4\">\r\n                {formData.images.map((image, index) => (\r\n                  <div key={index} className=\"relative rounded-xl overflow-hidden shadow-lg\">\r\n                    <img\r\n                      src={image}\r\n                      alt={`Product ${index + 1}`}\r\n                      className=\"w-full h-32 object-cover rounded-xl border border-pink-100\"\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeImage(index)}\r\n                      className=\"absolute top-2 right-2 btn-gradient p-1 rounded-full shadow\"\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Variants & Features */}\r\n          <div className=\"haven-section\">\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8\">\r\n              <div>\r\n                <label className=\"block text-base font-semibold text-primary-700 mb-1\">Sizes</label>\r\n                <div className=\"mt-1 flex space-x-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={sizeInput}\r\n                    onChange={(e) => setSizeInput(e.target.value)}\r\n                    placeholder=\"Add a size (e.g., 10, 11, 12)\"\r\n                    className=\"input-premium\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={addSize}\r\n                    className=\"btn-gradient\"\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </div>\r\n                <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                  {formData.sizes.map((size, index) => (\r\n                    <span\r\n                      key={index}\r\n                      className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 shadow\"\r\n                    >\r\n                      {size}\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeSize(index)}\r\n                        className=\"ml-2 text-blue-600 hover:text-blue-800\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-base font-semibold text-primary-700 mb-1\">Colors</label>\r\n                <div className=\"mt-1 flex space-x-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={colorInput}\r\n                    onChange={(e) => setColorInput(e.target.value)}\r\n                    placeholder=\"Add a color\"\r\n                    className=\"input-premium\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={addColor}\r\n                    className=\"btn-gradient\"\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </div>\r\n                <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                  {formData.colors.map((color, index) => (\r\n                    <span\r\n                      key={index}\r\n                      className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-pink-100 text-pink-800 shadow\"\r\n                    >\r\n                      {color}\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeColor(index)}\r\n                        className=\"ml-2 text-pink-600 hover:text-pink-800\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-8\">\r\n              <label className=\"block text-base font-semibold text-primary-700 mb-1\">Features</label>\r\n              <div className=\"mt-1 flex space-x-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={featureInput}\r\n                  onChange={(e) => setFeatureInput(e.target.value)}\r\n                  placeholder=\"Add a feature\"\r\n                  className=\"input-premium\"\r\n                />\r\n                <button type=\"button\" onClick={addFeature} className=\"btn-gradient\">Add</button>\r\n              </div>\r\n              <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                {formData.features.map((feature, index) => (\r\n                  <span key={index} className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800 shadow\">\r\n                    {feature}\r\n                    <button type=\"button\" onClick={() => removeFeature(index)} className=\"ml-2 text-green-600 hover:text-green-800\">×</button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Other Options */}\r\n          <div className=\"haven-section\">\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8 items-center\">\r\n              <div>\r\n                <label htmlFor=\"gender\" className=\"block text-base font-semibold text-primary-700 mb-1\">Gender</label>\r\n                <select\r\n                  id=\"gender\"\r\n                  name=\"gender\"\r\n                  className=\"input-premium\"\r\n                  value={formData.gender}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"unisex\">Unisex</option>\r\n                  <option value=\"male\">Male</option>\r\n                  <option value=\"female\">Female</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"flex items-center mt-6 sm:mt-0\">\r\n                <input\r\n                  id=\"featured\"\r\n                  name=\"featured\"\r\n                  type=\"checkbox\"\r\n                  checked={formData.featured}\r\n                  onChange={handleChange}\r\n                  className=\"mr-2\"\r\n                />\r\n                <label htmlFor=\"featured\" className=\"text-base font-semibold text-primary-700\">Featured Product</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Submit */}\r\n          <div className=\"pt-2\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full py-3 px-4 btn-gradient font-semibold rounded-xl shadow-lg hover:scale-[1.03] transition-all duration-200\"\r\n            >\r\n              {id ? 'Update Product' : 'Create Product'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductForm;"],"names":["Spinner","_jsx","className","children","schema","yup","shape","name","required","price","min","brand","category","countInStock","description","ProductForm","formData","setFormData","useState","images","sizes","colors","features","gender","featured","discount","discountPrice","uploading","setUploading","sizeInput","setSizeInput","colorInput","setColorInput","featureInput","setFeatureInput","errors","setErrors","id","useParams","navigate","useNavigate","dispatch","useDispatch","isLoading","isError","message","isSuccess","useSelector","state","product","user","auth","categories","useEffect","toast","error","reset","getCategories","getProductById","unwrap","then","catch","handleChange","e","value","type","checked","target","_objectSpread","_jsxs","onSubmit","async","preventDefault","validate","abortEarly","validationError","newErrors","inner","forEach","err","path","productData","Number","updateProduct","success","createProduct","htmlFor","onChange","rows","max","map","cat","_id","multiple","accept","files","Array","from","uploadPromises","FormData","append","file","data","api","post","headers","uploadedPaths","Promise","all","prev","console","image","index","src","alt","concat","onClick","filter","_","i","removeImage","placeholder","addSize","trim","size","removeSize","addColor","color","removeColor","addFeature","feature","removeFeature"],"sourceRoot":""}