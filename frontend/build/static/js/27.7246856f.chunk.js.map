{"version":3,"file":"static/js/27.7246856f.chunk.js","mappings":"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","sources":["pages/admin/UserManagement.js","components/Spinner.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUsers, banUser, resetUserPassword } from '../../features/user/userSlice';\r\nimport Spinner from '../../components/Spinner';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst UserManagement = () => {\r\n  const dispatch = useDispatch();\r\n  const { users = [], isLoading } = useSelector((state) => state.user);\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, [dispatch]);\r\n\r\n  const filteredUsers = users.filter(\r\n    (u) =>\r\n      u.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      u.email.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  const handleResetPassword = (userId) => {\r\n    const newPassword = prompt('Enter new password (min 8 chars):');\r\n    if (newPassword && newPassword.length >= 8) {\r\n      dispatch(resetUserPassword({ id: userId, newPassword }))\r\n        .unwrap()\r\n        .then(() => toast.success('Password reset successfully'))\r\n        .catch((err) => toast.error(err?.message || 'Failed to reset password'));\r\n    } else if (newPassword) {\r\n      toast.error('Password must be at least 8 characters.');\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <Spinner />;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-pink-50 via-blue-50 to-green-50 py-12 px-4\">\r\n      <div className=\"max-w-6xl mx-auto bg-white rounded-3xl shadow-xl p-8 border border-blue-100\">\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-center mb-8 gap-4\">\r\n          <h2 className=\"text-3xl font-extrabold text-blue-600 tracking-tight drop-shadow-lg\">User Management</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search users...\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"input-premium w-64 max-w-full\"\r\n          />\r\n        </div>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full text-xs sm:text-sm rounded-2xl overflow-hidden bg-white shadow-card backdrop-blur-md\">\r\n            <thead className=\"bg-gradient-to-r from-pink-100/80 to-blue-100/80\">\r\n              <tr>\r\n                <th className=\"px-2 sm:px-6 py-3 text-left font-bold text-blue-700 uppercase tracking-wider\">Avatar</th>\r\n                <th className=\"px-2 sm:px-6 py-3 text-left font-bold text-blue-700 uppercase tracking-wider\">Name</th>\r\n                <th className=\"px-2 sm:px-6 py-3 text-left font-bold text-blue-700 uppercase tracking-wider\">Email</th>\r\n                <th className=\"px-2 sm:px-6 py-3 text-left font-bold text-blue-700 uppercase tracking-wider\">Role</th>\r\n                <th className=\"px-2 sm:px-6 py-3 text-left font-bold text-blue-700 uppercase tracking-wider\">Status</th>\r\n                <th className=\"px-2 sm:px-6 py-3 text-left font-bold text-blue-700 uppercase tracking-wider\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"divide-y divide-blue-100\">\r\n              {filteredUsers.map((user) => (\r\n                <tr key={user._id} className=\"hover:bg-pink-50 transition\">\r\n                  <td className=\"px-2 sm:px-6 py-4\">\r\n                    <img src={user.avatar || '/images/default-avatar.png'} alt={user.name} className=\"w-10 h-10 rounded-full border border-pink-200 shadow\" />\r\n                  </td>\r\n                  <td className=\"px-2 sm:px-6 py-4 font-semibold text-pink-700\">{user.name}</td>\r\n                  <td className=\"px-2 sm:px-6 py-4 text-blue-700\">{user.email}</td>\r\n                  <td className=\"px-2 sm:px-6 py-4\">\r\n                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${user.isAdmin ? 'bg-green-100 text-green-700' : 'bg-yellow-100 text-yellow-700'}`}>{user.isAdmin ? 'Admin' : 'User'}</span>\r\n                  </td>\r\n                  <td className=\"px-2 sm:px-6 py-4\">\r\n                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${user.isBanned ? 'bg-pink-100 text-pink-700' : 'bg-green-100 text-green-700'}`}>{user.isBanned ? 'Banned' : 'Active'}</span>\r\n                  </td>\r\n                  <td className=\"px-2 sm:px-6 py-4 flex gap-2\">\r\n                    <button\r\n                      className=\"btn-gradient px-3 py-1 rounded-lg text-xs font-semibold shadow\"\r\n                      onClick={() => handleResetPassword(user._id)}\r\n                    >\r\n                      Reset Password\r\n                    </button>\r\n                    <button\r\n                      className={`px-3 py-1 rounded-lg text-xs font-semibold shadow ${user.isBanned ? 'bg-green-200 text-green-700' : 'bg-pink-200 text-pink-700'}`}\r\n                      onClick={() => dispatch(banUser(user._id))}\r\n                    >\r\n                      {user.isBanned ? 'Unban' : 'Ban'}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagement;\r\n","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"flex justify-center items-center min-h-[40vh] sm:min-h-screen w-full\">\r\n      <div className=\"animate-spin rounded-full h-8 w-8 sm:h-12 sm:w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;"],"names":["UserManagement","dispatch","useDispatch","users","isLoading","useSelector","state","user","search","setSearch","useState","useEffect","getUsers","filteredUsers","filter","u","name","toLowerCase","includes","email","_jsx","Spinner","className","children","_jsxs","type","placeholder","value","onChange","e","target","map","src","avatar","alt","concat","isAdmin","isBanned","onClick","userId","newPassword","prompt","length","resetUserPassword","id","unwrap","then","toast","success","catch","err","error","message","handleResetPassword","_id","banUser"],"sourceRoot":""}