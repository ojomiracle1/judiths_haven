{"version":3,"file":"static/js/642.406fc150.chunk.js","mappings":"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","sources":["components/Spinner.js","components/AdminDashboardAnalytics.js","pages/admin/AdminDashboard.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"flex justify-center items-center min-h-[40vh] sm:min-h-screen w-full\">\r\n      <div className=\"animate-spin rounded-full h-8 w-8 sm:h-12 sm:w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FaChartLine, FaExclamationCircle } from 'react-icons/fa';\r\n\r\nfunction AdminDashboardAnalytics({ token }) {\r\n  const [stats, setStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/admin/analytics', {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n    .then(res => setStats(res.data))\r\n    .catch(() => setError('Failed to fetch analytics'))\r\n    .finally(() => setLoading(false));\r\n  }, [token]);\r\n\r\n  if (loading) return <div className=\"text-center py-4\">Loading analytics...</div>;\r\n  if (error) return <div className=\"bg-red-50 text-red-600 p-4 rounded-lg flex items-center\"><FaExclamationCircle className=\"mr-2\" />{error}</div>;\r\n  if (!stats) return null;\r\n\r\n  return (\r\n    <div className=\"mb-8\">\r\n      <div className=\"flex items-center mb-4\">\r\n        <FaChartLine className=\"text-primary-600 mr-2\" />\r\n        <h2 className=\"text-xl font-bold text-primary-700\">{t('advancedAnalytics')}</h2>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        <div className=\"bg-white rounded-xl shadow p-4\">\r\n          <h3 className=\"text-sm text-gray-500 mb-1\">{t('totalSales')}</h3>\r\n          <p className=\"text-2xl font-bold text-blue-600\">₦{stats.salesTotal?.toLocaleString() || 0}</p>\r\n        </div>\r\n        \r\n        <div className=\"bg-white rounded-xl shadow p-4\">\r\n          <h3 className=\"text-sm text-gray-500 mb-1\">{t('totalOrders')}</h3>\r\n          <p className=\"text-2xl font-bold text-green-600\">{stats.orderCount || 0}</p>\r\n        </div>\r\n        \r\n        <div className=\"bg-white rounded-xl shadow p-4\">\r\n          <h3 className=\"text-sm text-gray-500 mb-1\">{t('lowStockItems')}</h3>\r\n          <p className=\"text-2xl font-bold text-yellow-600\">{stats.lowStockCount || 0}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      {stats.additionalMetrics && (\r\n        <div className=\"mt-4 bg-white rounded-xl shadow p-4\">\r\n          <h3 className=\"font-bold mb-2\">{t('additionalMetrics')}</h3>\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n            {Object.entries(stats.additionalMetrics).map(([key, value]) => (\r\n              <div key={key} className=\"bg-gray-50 p-3 rounded-lg\">\r\n                <p className=\"text-sm text-gray-600\">{t(key)}</p>\r\n                <p className=\"text-lg font-bold text-primary-600\">{value}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboardAnalytics;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUsers } from '../../features/user/userSlice';\r\nimport { getProducts } from '../../features/product/productSlice';\r\nimport { getOrders } from '../../features/order/orderSlice';\r\nimport Spinner from '../../components/Spinner';\r\nimport api from '../../utils/axios';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { Line, Bar, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { FaUsers, FaBoxes, FaShoppingCart, FaMoneyBillWave, FaExclamationTriangle } from 'react-icons/fa';\r\nimport AdminDashboardAnalytics from '../../components/AdminDashboardAnalytics';\r\nimport WishlistHighlights from '../../components/WishlistHighlights';\r\nimport RecommendedProducts from '../../components/RecommendedProducts';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  Filler,\r\n} from 'chart.js';\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  Filler\r\n);\r\n\r\nconst AdminDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { users = [], isLoading: usersLoading } = useSelector((state) => state.user);\r\n  const { products = [], isLoading: productsLoading } = useSelector((state) => state.product);\r\n  const { orders = [], isLoading: ordersLoading } = useSelector((state) => state.order);\r\n  const [lowStockProducts, setLowStockProducts] = useState([]);\r\n  const [lowStockLoading, setLowStockLoading] = useState(true);\r\n  const [lowStockError, setLowStockError] = useState('');\r\n  const [salesStats, setSalesStats] = useState([]);\r\n  const [userStats, setUserStats] = useState([]);\r\n  const [statsLoading, setStatsLoading] = useState(true);\r\n  const [statsError, setStatsError] = useState('');\r\n  const [topProducts, setTopProducts] = useState([]);\r\n  const [categorySales, setCategorySales] = useState([]);\r\n  const [yearlyTotals, setYearlyTotals] = useState({});\r\n  const [inventoryStats, setInventoryStats] = useState({});\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  // const [selectedTimeframe, setSelectedTimeframe] = useState('yearly'); // Removed unused variables\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getProducts());\r\n    dispatch(getOrders());\r\n    // Fetch low stock products\r\n    const fetchLowStock = async () => {\r\n      setLowStockLoading(true);\r\n      setLowStockError('');\r\n      try {\r\n        const res = await api.get('/api/products/low-stock', {\r\n          headers: { Authorization: `Bearer ${user?.token}` },\r\n        });\r\n        setLowStockProducts(res.data.products || []);\r\n      } catch (err) {\r\n        setLowStockError('Failed to fetch low stock products');\r\n      } finally {\r\n        setLowStockLoading(false);\r\n      }\r\n    };\r\n    if (user?.isAdmin) fetchLowStock();\r\n  }, [dispatch, user]);\r\n\r\n  useEffect(() => {\r\n    // Fetch analytics data\r\n    const fetchStats = async () => {\r\n      setStatsLoading(true);\r\n      setStatsError('');\r\n      try {\r\n        const year = selectedYear;\r\n        // Fetch sales stats\r\n        const salesRes = await api.get(`/api/sales-stats/yearly?year=${year}`);\r\n        setSalesStats(salesRes.data || []);\r\n\r\n        // Get yearly totals\r\n        const totalsRes = await api.get(`/api/sales-stats/total?year=${year}`);\r\n        setYearlyTotals(totalsRes.data || { totalSales: 0, totalOrders: 0 });\r\n\r\n        // Fetch users and group by month\r\n        const usersRes = await api.get('/api/users');\r\n        const usersByMonth = Array(12).fill(0);\r\n        usersRes.data.forEach(u => {\r\n          const d = new Date(u.createdAt);\r\n          if (d.getFullYear() === year) usersByMonth[d.getMonth()]++;\r\n        });\r\n        setUserStats(usersByMonth);\r\n\r\n        // Fetch top products\r\n        const topProductsRes = await api.get(`/api/orders/aggregate/top-products?year=${year}`);\r\n        setTopProducts(topProductsRes.data || []);\r\n\r\n        // Fetch sales by category\r\n        const catSalesRes = await api.get(`/api/orders/aggregate/sales-by-category?year=${year}`);\r\n        setCategorySales(catSalesRes.data || []);\r\n\r\n        // Calculate inventory statistics\r\n        const inStock = products.filter(p => p.countInStock > 0).length;\r\n        const outOfStock = products.filter(p => p.countInStock === 0).length;\r\n        const lowStock = products.filter(p => p.countInStock > 0 && p.countInStock <= 5).length;\r\n        const totalInventoryValue = products.reduce((sum, p) => sum + (p.price * p.countInStock), 0);\r\n        setInventoryStats({\r\n          inStock,\r\n          outOfStock,\r\n          lowStock,\r\n          totalValue: totalInventoryValue\r\n        });\r\n      } catch (err) {\r\n        setStatsError('Failed to fetch analytics data');\r\n      } finally {\r\n        setStatsLoading(false);\r\n      }\r\n    };\r\n    fetchStats();\r\n    // Added 'products' and 'selectedYear' to dependency array to fix missing dependencies warning\r\n  }, [products, selectedYear]);\r\n\r\n  if (usersLoading || productsLoading || ordersLoading) return <Spinner />\r\n  \r\n  // Calculate key metrics\r\n  const totalSales = orders.reduce((sum, order) => sum + (order.totalPrice || 0), 0);\r\n  const recentOrders = orders.slice(-5).reverse();\r\n  const averageOrderValue = orders.length > 0 ? totalSales / orders.length : 0;\r\n  const paidOrders = orders.filter(order => order.isPaid).length;\r\n  const orderConversionRate = orders.length > 0 ? (paidOrders / orders.length * 100).toFixed(1) : 0;\r\n  \r\n  // Year selector options\r\n  const currentYear = new Date().getFullYear();\r\n  const yearOptions = [];\r\n  for (let i = currentYear - 2; i <= currentYear; i++) {\r\n    yearOptions.push(i);\r\n  }\r\n\r\n  // Get token from localStorage (or auth state if available)\r\n  const token = user?.token || (localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')).token : '');\r\n  return (\r\n    <div className=\"container mx-auto px-2 sm:px-4 py-10\">\r\n      <Helmet>\r\n        <title>Admin Dashboard - Judith's Haven</title>\r\n        <meta name=\"description\" content=\"Admin dashboard for managing users, products, orders, and analytics at Judith's Haven.\" />\r\n        <link rel=\"canonical\" href=\"https://yourdomain.com/admin/dashboard\" />\r\n      </Helmet>\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <h1 className=\"text-3xl font-extrabold mb-6 text-primary-700 tracking-tight drop-shadow-lg text-center\">{t('adminDashboard')}</h1>\r\n        \r\n        {/* Admin Dashboard Analytics Component */}\r\n        {token && <AdminDashboardAnalytics token={token} />}\r\n\r\n        {/* Admin Insights: Wishlist Highlights & Recommendations */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-10\">\r\n          <WishlistHighlights token={token} />\r\n          <RecommendedProducts token={token} />\r\n        </div>\r\n        \r\n        {/* Time Period Selector */}\r\n        <div className=\"flex justify-center items-center mb-8 gap-4\">\r\n          <div className=\"flex items-center\">\r\n            <label htmlFor=\"year-select\" className=\"mr-2 text-gray-700\">{t('year')}:</label>\r\n            <select \r\n              id=\"year-select\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(Number(e.target.value))}\r\n              className=\"rounded border border-gray-300 px-2 py-1 focus:outline-none focus:ring-2 focus:ring-primary-400\"\r\n            >\r\n              {yearOptions.map(year => (\r\n                <option key={year} value={year}>{year}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Key Metrics Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\r\n          <div className=\"bg-white rounded-xl shadow p-4 flex items-center\">\r\n            <div className=\"rounded-full bg-blue-100 p-3 mr-4\">\r\n              <FaMoneyBillWave className=\"text-blue-500 text-xl\" />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-sm text-gray-500\">{t('totalSales')}</h3>\r\n              <p className=\"text-2xl font-bold text-blue-600\">₦{totalSales.toLocaleString()}</p>\r\n              <p className=\"text-xs text-gray-500\">{yearlyTotals.totalOrders || 0} {t('orders')}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white rounded-xl shadow p-4 flex items-center\">\r\n            <div className=\"rounded-full bg-green-100 p-3 mr-4\">\r\n              <FaUsers className=\"text-green-500 text-xl\" />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-sm text-gray-500\">{t('totalUsers')}</h3>\r\n              <p className=\"text-2xl font-bold text-green-600\">{users.length}</p>\r\n              <p className=\"text-xs text-gray-500\">{userStats.reduce((a, b) => a + b, 0)} {t('newThisYear')}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white rounded-xl shadow p-4 flex items-center\">\r\n            <div className=\"rounded-full bg-purple-100 p-3 mr-4\">\r\n              <FaBoxes className=\"text-purple-500 text-xl\" />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-sm text-gray-500\">{t('inventory')}</h3>\r\n              <p className=\"text-2xl font-bold text-purple-600\">{products.length}</p>\r\n              <p className=\"text-xs text-gray-500\">₦{inventoryStats.totalValue?.toLocaleString() || 0} {t('value')}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white rounded-xl shadow p-4 flex items-center\">\r\n            <div className=\"rounded-full bg-yellow-100 p-3 mr-4\">\r\n              <FaShoppingCart className=\"text-yellow-500 text-xl\" />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-sm text-gray-500\">{t('avgOrderValue')}</h3>\r\n              <p className=\"text-2xl font-bold text-yellow-600\">₦{averageOrderValue.toLocaleString(undefined, {maximumFractionDigits: 0})}</p>\r\n              <p className=\"text-xs text-gray-500\">{orderConversionRate}% {t('conversionRate')}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Analytics Charts */}\r\n        <div className=\"mb-10\">\r\n          {statsLoading ? (\r\n            <div>Loading analytics...</div>\r\n          ) : statsError ? (\r\n            <div className=\"text-red-500\">{statsError}</div>\r\n          ) : (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n              <div className=\"bg-white rounded-xl shadow p-4\">\r\n                <h3 className=\"font-bold mb-2\">{t('monthlySales')}</h3>\r\n                <Line\r\n                  data={{\r\n                    labels: [\r\n                      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n                      'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n                    ],\r\n                    datasets: [\r\n                      {\r\n                        label: t('sales') + ' (₦)',\r\n                        data: salesStats.map(s => s.totalSales),\r\n                        borderColor: 'rgba(75,192,192,1)',\r\n                        backgroundColor: 'rgba(75,192,192,0.2)',\r\n                        tension: 0.3,\r\n                        fill: true,\r\n                      },\r\n                      {\r\n                        label: t('orders'),\r\n                        data: salesStats.map(s => s.totalOrders),\r\n                        borderColor: 'rgba(255,99,132,1)',\r\n                        backgroundColor: 'rgba(255,99,132,0.2)',\r\n                        tension: 0.3,\r\n                        fill: false,\r\n                        yAxisID: 'y1',\r\n                      },\r\n                    ],\r\n                  }}\r\n                  options={{\r\n                    responsive: true,\r\n                    plugins: { legend: { position: 'top' }, title: { display: false } },\r\n                    scales: { y1: { position: 'right', grid: { drawOnChartArea: false } } },\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"bg-white rounded-xl shadow p-4\">\r\n                <h3 className=\"font-bold mb-2\">{t('userRegistrations')} ({t('monthly')})</h3>\r\n                <Bar\r\n                  data={{\r\n                    labels: [\r\n                      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n                      'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n                    ],\r\n                    datasets: [\r\n                      {\r\n                        label: t('users'),\r\n                        data: userStats,\r\n                        backgroundColor: 'rgba(54,162,235,0.5)',\r\n                      },\r\n                    ],\r\n                  }}\r\n                  options={{\r\n                    responsive: true,\r\n                    plugins: { legend: { display: false }, title: { display: false } },\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* More Analytics Charts */}\r\n        <div className=\"mb-10\">\r\n          {statsLoading ? null : (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n              <div className=\"bg-white rounded-xl shadow p-4\">\r\n                <h3 className=\"font-bold mb-2\">{t('top5Products')} ({t('byQuantitySold')})</h3>\r\n                <Bar\r\n                  data={{\r\n                    labels: topProducts.map(p => p.name),\r\n                    datasets: [\r\n                      {\r\n                        label: t('quantitySold'),\r\n                        data: topProducts.map(p => p.totalSold),\r\n                        backgroundColor: 'rgba(255, 159, 64, 0.7)',\r\n                      },\r\n                      {\r\n                        label: t('revenue') + ' (₦)',\r\n                        data: topProducts.map(p => p.totalRevenue),\r\n                        backgroundColor: 'rgba(54, 162, 235, 0.4)',\r\n                        yAxisID: 'y1',\r\n                      },\r\n                    ],\r\n                  }}\r\n                  options={{\r\n                    responsive: true,\r\n                    plugins: { legend: { position: 'top' }, title: { display: false } },\r\n                    scales: { y1: { position: 'right', grid: { drawOnChartArea: false } } },\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"bg-white rounded-xl shadow p-4\">\r\n                <h3 className=\"font-bold mb-2\">{t('salesByCategory')}</h3>\r\n                <Pie\r\n                  data={{\r\n                    labels: categorySales.map(c => c.categoryName || 'Unknown'),\r\n                    datasets: [\r\n                      {\r\n                        label: t('sales') + ' (₦)',\r\n                        data: categorySales.map(c => c.totalSales),\r\n                        backgroundColor: [\r\n                          '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#C9CBCF', '#B2FF66', '#FF66B2', '#66B2FF',\r\n                        ],\r\n                      },\r\n                    ],\r\n                  }}\r\n                  options={{\r\n                    responsive: true,\r\n                    plugins: { legend: { position: 'right' }, title: { display: false } },\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Inventory Analytics */}\r\n        <div className=\"mb-10\">\r\n          {statsLoading ? null : (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n              <div className=\"bg-white rounded-xl shadow p-4\">\r\n                <h3 className=\"font-bold mb-2\">{t('inventoryStatus')}</h3>\r\n                <Doughnut\r\n                  data={{\r\n                    labels: [t('inStock'), t('lowStock'), t('outOfStock')],\r\n                    datasets: [\r\n                      {\r\n                        data: [\r\n                          inventoryStats.inStock - inventoryStats.lowStock,\r\n                          inventoryStats.lowStock,\r\n                          inventoryStats.outOfStock\r\n                        ],\r\n                        backgroundColor: [\r\n                          '#4BC0C0', '#FFCE56', '#FF6384'\r\n                        ],\r\n                      },\r\n                    ],\r\n                  }}\r\n                  options={{\r\n                    responsive: true,\r\n                    plugins: { legend: { position: 'right' }, title: { display: false } },\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"bg-white rounded-xl shadow p-4 flex flex-col justify-center\">\r\n                <h3 className=\"font-bold mb-4\">{t('inventoryMetrics')}</h3>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"bg-green-50 p-3 rounded-lg\">\r\n                    <p className=\"text-sm text-gray-600\">{t('totalProducts')}</p>\r\n                    <p className=\"text-2xl font-bold text-green-600\">{products.length}</p>\r\n                  </div>\r\n                  <div className=\"bg-yellow-50 p-3 rounded-lg\">\r\n                    <p className=\"text-sm text-gray-600\">{t('lowStockItems')}</p>\r\n                    <p className=\"text-2xl font-bold text-yellow-600\">{inventoryStats.lowStock}</p>\r\n                  </div>\r\n                  <div className=\"bg-red-50 p-3 rounded-lg\">\r\n                    <p className=\"text-sm text-gray-600\">{t('outOfStock')}</p>\r\n                    <p className=\"text-2xl font-bold text-red-600\">{inventoryStats.outOfStock}</p>\r\n                  </div>\r\n                  <div className=\"bg-blue-50 p-3 rounded-lg\">\r\n                    <p className=\"text-sm text-gray-600\">{t('inventoryValue')}</p>\r\n                    <p className=\"text-2xl font-bold text-blue-600\">₦{inventoryStats.totalValue?.toLocaleString() || 0}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* Low Stock Alert Section */}\r\n        <div className=\"mb-8\">\r\n          {lowStockLoading ? (\r\n            <div className=\"text-yellow-600\">{t('checkingLowStock')}</div>\r\n          ) : lowStockError ? (\r\n            <div className=\"text-red-500\">{lowStockError}</div>\r\n          ) : lowStockProducts.length > 0 ? (\r\n            <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-lg mb-4\">\r\n              <div className=\"flex items-center font-bold text-yellow-800 mb-2\">\r\n                <FaExclamationTriangle className=\"mr-2 text-yellow-600\" />\r\n                {t('lowStockAlert')}\r\n              </div>\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full bg-white/90 rounded shadow text-base\">\r\n                  <thead className=\"bg-yellow-100\">\r\n                    <tr>\r\n                      <th className=\"px-3 py-2 text-left font-bold text-yellow-700 uppercase tracking-wider\">{t('product')}</th>\r\n                      <th className=\"px-3 py-2 text-left font-bold text-yellow-700 uppercase tracking-wider\">{t('stock')}</th>\r\n                      <th className=\"px-3 py-2 text-left font-bold text-yellow-700 uppercase tracking-wider\">{t('category')}</th>\r\n                      <th className=\"px-3 py-2 text-left font-bold text-yellow-700 uppercase tracking-wider\">{t('action')}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {lowStockProducts.map((p) => (\r\n                      <tr key={p._id} className=\"hover:bg-yellow-50\">\r\n                        <td className=\"px-3 py-2\">{p.name}</td>\r\n                        <td className=\"px-3 py-2 font-bold text-red-600\">{p.countInStock}</td>\r\n                        <td className=\"px-3 py-2\">{p.category?.name || 'N/A'}</td>\r\n                        <td className=\"px-3 py-2\">\r\n                          <Link to={`/admin/product/${p._id}/edit`} className=\"text-blue-600 hover:text-blue-800 underline\">\r\n                            {t('updateStock')}\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-green-700 bg-green-50 p-3 rounded-lg inline-block\">{t('noProductsLowStock')}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-10\">\r\n          <Link to=\"/admin/users\" className=\"card-haven flex flex-col items-center py-8 hover:scale-[1.03] transition-all duration-200\">\r\n            <div className=\"flex items-center justify-center bg-blue-100 rounded-full w-16 h-16 mb-3\">\r\n              <FaUsers className=\"text-blue-500 text-2xl\" />\r\n            </div>\r\n            <div className=\"text-4xl font-extrabold text-primary-400 mb-2\">{users.length}</div>\r\n            <div className=\"text-lg text-primary-700 font-semibold\">{t('users')}</div>\r\n            <div className=\"text-sm text-gray-500 mt-1\">{t('manageUsers')}</div>\r\n          </Link>\r\n          <Link to=\"/admin/products\" className=\"card-haven flex flex-col items-center py-8 hover:scale-[1.03] transition-all duration-200\">\r\n            <div className=\"flex items-center justify-center bg-pink-100 rounded-full w-16 h-16 mb-3\">\r\n              <FaBoxes className=\"text-pink-500 text-2xl\" />\r\n            </div>\r\n            <div className=\"text-4xl font-extrabold text-pink-400 mb-2\">{products.length}</div>\r\n            <div className=\"text-lg text-primary-700 font-semibold\">{t('products')}</div>\r\n            <div className=\"text-sm text-gray-500 mt-1\">{t('manageProducts')}</div>\r\n          </Link>\r\n          <Link to=\"/admin/orders\" className=\"card-haven flex flex-col items-center py-8 hover:scale-[1.03] transition-all duration-200\">\r\n            <div className=\"flex items-center justify-center bg-green-100 rounded-full w-16 h-16 mb-3\">\r\n              <FaShoppingCart className=\"text-green-500 text-2xl\" />\r\n            </div>\r\n            <div className=\"text-4xl font-extrabold text-blue-400 mb-2\">{orders.length}</div>\r\n            <div className=\"text-lg text-primary-700 font-semibold\">{t('orders')}</div>\r\n            <div className=\"text-sm text-gray-500 mt-1\">{t('manageOrders')}</div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"card-haven py-8\">\r\n          <div className=\"text-xl font-semibold mb-6 text-primary-700\">{t('recentOrders')}</div>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full bg-white/90 rounded-2xl shadow-card-haven text-base\">\r\n              <thead className=\"bg-primary-50\">\r\n                <tr>\r\n                  <th className=\"px-3 py-4 text-left font-bold text-primary-400 uppercase tracking-wider\">{t('orderId')}</th>\r\n                  <th className=\"px-3 py-4 text-left font-bold text-primary-400 uppercase tracking-wider\">{t('user')}</th>\r\n                  <th className=\"px-3 py-4 text-left font-bold text-primary-400 uppercase tracking-wider\">{t('total')}</th>\r\n                  <th className=\"px-3 py-4 text-left font-bold text-primary-400 uppercase tracking-wider\">{t('status')}</th>\r\n                  <th className=\"px-3 py-4 text-left font-bold text-primary-400 uppercase tracking-wider\">{t('date')}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-primary-50\">\r\n                {recentOrders.map((order) => (\r\n                  <tr key={order._id} className=\"hover:bg-blue-50/60 transition\">\r\n                    <td className=\"px-3 py-4 whitespace-nowrap text-primary-700 font-mono font-semibold\">{order._id}</td>\r\n                    <td className=\"px-3 py-4 whitespace-nowrap text-primary-700\">{order.user?.name || 'N/A'}</td>\r\n                    <td className=\"px-3 py-4 whitespace-nowrap text-pink-500 font-bold\">₦{order.totalPrice?.toLocaleString()}</td>\r\n                    <td className=\"px-3 py-4 whitespace-nowrap\">\r\n                      <span className={`px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full shadow ${order.isPaid ? 'bg-green-100 text-green-700' : 'bg-yellow-100 text-yellow-700'}`}>{order.isPaid ? 'Paid' : 'Pending'}</span>\r\n                    </td>\r\n                    <td className=\"px-3 py-4 whitespace-nowrap text-primary-700\">{new Date(order.createdAt).toLocaleDateString()}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"names":["Spinner","_jsx","className","children","_ref","_stats$salesTotal","token","stats","setStats","useState","loading","setLoading","error","setError","t","useTranslation","useEffect","axios","get","headers","Authorization","concat","then","res","data","catch","finally","_jsxs","FaExclamationCircle","FaChartLine","salesTotal","toLocaleString","orderCount","lowStockCount","additionalMetrics","Object","entries","map","_ref2","key","value","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","ArcElement","Filler","AdminDashboard","_inventoryStats$total","_inventoryStats$total2","dispatch","useDispatch","users","isLoading","usersLoading","useSelector","state","user","products","productsLoading","product","orders","ordersLoading","order","lowStockProducts","setLowStockProducts","lowStockLoading","setLowStockLoading","lowStockError","setLowStockError","salesStats","setSalesStats","userStats","setUserStats","statsLoading","setStatsLoading","statsError","setStatsError","topProducts","setTopProducts","categorySales","setCategorySales","yearlyTotals","setYearlyTotals","inventoryStats","setInventoryStats","selectedYear","setSelectedYear","Date","getFullYear","auth","getUsers","getProducts","getOrders","isAdmin","async","api","err","fetchLowStock","year","salesRes","totalsRes","totalSales","totalOrders","usersRes","usersByMonth","Array","fill","forEach","u","d","createdAt","getMonth","topProductsRes","catSalesRes","inStock","filter","p","countInStock","length","outOfStock","lowStock","totalInventoryValue","reduce","sum","price","totalValue","fetchStats","totalPrice","recentOrders","slice","reverse","averageOrderValue","paidOrders","isPaid","orderConversionRate","toFixed","currentYear","yearOptions","i","push","localStorage","getItem","JSON","parse","Helmet","name","content","rel","href","AdminDashboardAnalytics","WishlistHighlights","RecommendedProducts","htmlFor","id","onChange","e","Number","target","FaMoneyBillWave","FaUsers","a","b","FaBoxes","FaShoppingCart","undefined","maximumFractionDigits","Line","labels","datasets","label","s","borderColor","backgroundColor","tension","yAxisID","options","responsive","plugins","legend","position","title","display","scales","y1","grid","drawOnChartArea","Bar","totalSold","totalRevenue","Pie","c","categoryName","Doughnut","FaExclamationTriangle","_p$category","category","Link","to","_id","_order$user","_order$totalPrice","toLocaleDateString"],"sourceRoot":""}