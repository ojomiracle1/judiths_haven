{"version":3,"file":"static/js/186.55a13792.chunk.js","mappings":"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","sources":["pages/admin/AdminAuditLogs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AdminAuditLogs = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [pages, setPages] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [limit, setLimit] = useState(20);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [filters, setFilters] = useState({ user: '', action: '', startDate: '', endDate: '', search: '' });\r\n\r\n  const fetchLogs = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const params = { page, limit, ...filters };\r\n      Object.keys(params).forEach((k) => (params[k] === '' ? delete params[k] : null));\r\n      const res = await axios.get('/api/audit-logs', { params });\r\n      setLogs(res.data.logs);\r\n      setPages(res.data.pages);\r\n      setTotal(res.data.total);\r\n    } catch (err) {\r\n      setError('Failed to fetch logs');\r\n      toast.error('Failed to fetch logs');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLogs();\r\n    // eslint-disable-next-line\r\n  }, [page, limit]);\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    setPage(1);\r\n    fetchLogs();\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 py-10\">\r\n      <h1 className=\"text-4xl font-extrabold text-gray-800 mb-8\">Audit Logs</h1>\r\n      <form onSubmit={handleSearch} className=\"flex flex-wrap gap-4 mb-6 items-end\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"search\"\r\n          value={filters.search}\r\n          onChange={handleFilterChange}\r\n          placeholder=\"Search action/details...\"\r\n          className=\"border rounded px-3 py-2\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"user\"\r\n          value={filters.user}\r\n          onChange={handleFilterChange}\r\n          placeholder=\"User ID\"\r\n          className=\"border rounded px-3 py-2\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"action\"\r\n          value={filters.action}\r\n          onChange={handleFilterChange}\r\n          placeholder=\"Action\"\r\n          className=\"border rounded px-3 py-2\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"startDate\"\r\n          value={filters.startDate}\r\n          onChange={handleFilterChange}\r\n          className=\"border rounded px-3 py-2\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"endDate\"\r\n          value={filters.endDate}\r\n          onChange={handleFilterChange}\r\n          className=\"border rounded px-3 py-2\"\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded font-semibold shadow\"\r\n        >\r\n          Filter/Search\r\n        </button>\r\n      </form>\r\n      {loading ? (\r\n        <div className=\"text-center py-10\">Loading...</div>\r\n      ) : error ? (\r\n        <div className=\"text-center text-red-500 py-10\">{error}</div>\r\n      ) : (\r\n        <div className=\"overflow-x-auto bg-white rounded-xl shadow p-4\">\r\n          <table className=\"min-w-full text-sm\">\r\n            <thead>\r\n              <tr className=\"bg-blue-50\">\r\n                <th className=\"px-4 py-2 text-left\">User</th>\r\n                <th className=\"px-4 py-2 text-left\">Action</th>\r\n                <th className=\"px-4 py-2 text-left\">Details</th>\r\n                <th className=\"px-4 py-2 text-left\">Timestamp</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {logs.length === 0 ? (\r\n                <tr><td colSpan={4} className=\"text-center py-8 text-gray-500\">No logs found.</td></tr>\r\n              ) : (\r\n                logs.map((log) => (\r\n                  <tr key={log._id} className=\"border-b hover:bg-blue-50\">\r\n                    <td className=\"px-4 py-2\">\r\n                      {log.user ? (\r\n                        <span title={log.user.email}>{log.user.name || log.user.email}</span>\r\n                      ) : (\r\n                        <span className=\"italic text-gray-400\">System</span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-4 py-2\">{log.action}</td>\r\n                    <td className=\"px-4 py-2\">\r\n                      <pre className=\"whitespace-pre-wrap break-all text-xs bg-gray-50 rounded p-2 max-w-xs overflow-x-auto\">{JSON.stringify(log.details, null, 2)}</pre>\r\n                    </td>\r\n                    <td className=\"px-4 py-2\">{new Date(log.createdAt).toLocaleString()}</td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"flex justify-between items-center mt-4\">\r\n            <div>Total: {total}</div>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={() => setPage((p) => Math.max(1, p - 1))}\r\n                disabled={page === 1}\r\n                className=\"px-3 py-1 rounded bg-gray-200\"\r\n              >Prev</button>\r\n              <span>Page {page} of {pages}</span>\r\n              <button\r\n                onClick={() => setPage((p) => Math.min(pages, p + 1))}\r\n                disabled={page === pages}\r\n                className=\"px-3 py-1 rounded bg-gray-200\"\r\n              >Next</button>\r\n              <select value={limit} onChange={e => { setLimit(Number(e.target.value)); setPage(1); }} className=\"ml-2 px-2 py-1 rounded border\">\r\n                {[10, 20, 50, 100].map(opt => <option key={opt} value={opt}>{opt} per page</option>)}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminAuditLogs; "],"names":["AdminAuditLogs","logs","setLogs","useState","page","setPage","pages","setPages","total","setTotal","limit","setLimit","loading","setLoading","error","setError","filters","setFilters","user","action","startDate","endDate","search","fetchLogs","async","params","_objectSpread","Object","keys","forEach","k","res","axios","get","data","err","toast","useEffect","handleFilterChange","e","prev","target","name","value","_jsxs","className","children","_jsx","onSubmit","preventDefault","type","onChange","placeholder","length","colSpan","map","log","title","email","JSON","stringify","details","Date","createdAt","toLocaleString","_id","onClick","p","Math","max","disabled","min","Number","opt"],"sourceRoot":""}