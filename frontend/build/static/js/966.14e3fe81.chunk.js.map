{"version":3,"file":"static/js/966.14e3fe81.chunk.js","mappings":"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","sources":["components/Spinner.js","pages/admin/UserForm.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"flex justify-center items-center min-h-[40vh] sm:min-h-screen w-full\">\r\n      <div className=\"animate-spin rounded-full h-8 w-8 sm:h-12 sm:w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { createUser, updateUser, getUserById, reset } from '../../features/user/userSlice';\r\nimport { toast } from 'react-toastify';\r\nimport Spinner from '../../components/Spinner';\r\n\r\nconst UserForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    isAdmin: false,\r\n  });\r\n\r\n  const { name, email, password, isAdmin } = formData;\r\n\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { isLoading, isError, message, isSuccess } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    // Reset user slice state on mount\r\n    dispatch(reset());\r\n    console.log('UserForm useEffect', { user, isError, message, isSuccess, id });\r\n    if (!user) {\r\n      navigate('/login');\r\n    }\r\n\r\n    if (isError) {\r\n      toast.error(message);\r\n    }\r\n\r\n    if (isSuccess) {\r\n      dispatch(reset());\r\n      navigate('/admin/users');\r\n    }\r\n\r\n    if (id) {\r\n      dispatch(getUserById(id))\r\n        .unwrap()\r\n        .then((user) => {\r\n          setFormData({\r\n            name: user.name,\r\n            email: user.email,\r\n            password: '',\r\n            isAdmin: user.isAdmin,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error);\r\n        });\r\n    }\r\n  }, [user, navigate, isError, message, isSuccess, dispatch, id]);\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (id) {\r\n      dispatch(updateUser({ id, ...formData }))\r\n        .unwrap()\r\n        .then(() => toast.success('User updated successfully'))\r\n        .catch((error) => toast.error(error));\r\n    } else {\r\n      dispatch(createUser(formData))\r\n        .unwrap()\r\n        .then(() => toast.success('User created successfully'))\r\n        .catch((error) => toast.error(error));\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <Spinner />;\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-pink-50 via-blue-50 to-green-50 py-12 px-4\">\r\n      <div className=\"w-full max-w-lg bg-white rounded-3xl shadow-xl p-8 border border-blue-100\">\r\n        <h1 className=\"text-3xl font-extrabold text-blue-600 mb-8 text-center tracking-tight\">{id ? 'Edit User' : 'Create User'}</h1>\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"mt-1 block w-full rounded-xl border border-blue-200 bg-blue-50 px-4 py-2 shadow-sm focus:border-blue-400 focus:ring-2 focus:ring-blue-100 transition\"\r\n              placeholder=\"User Name\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"mt-1 block w-full rounded-xl border border-pink-200 bg-pink-50 px-4 py-2 shadow-sm focus:border-pink-400 focus:ring-2 focus:ring-pink-100 transition\"\r\n              placeholder=\"user@haven.com\"\r\n            />\r\n          </div>\r\n          {!id && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"mt-1 block w-full rounded-xl border border-green-200 bg-green-50 px-4 py-2 shadow-sm focus:border-green-400 focus:ring-2 focus:ring-green-100 transition\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"flex items-center gap-2 mt-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"isAdmin\"\r\n              name=\"isAdmin\"\r\n              checked={isAdmin}\r\n              onChange={handleChange}\r\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 rounded\"\r\n            />\r\n            <label htmlFor=\"isAdmin\" className=\"text-blue-700 font-medium\">Admin User</label>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full py-3 px-4 bg-gradient-to-r from-blue-400 via-pink-400 to-green-400 text-white font-bold rounded-xl shadow-lg hover:from-blue-500 hover:to-green-500 transition focus:outline-none focus:ring-2 focus:ring-blue-200\"\r\n          >\r\n            {id ? 'Update User' : 'Create User'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserForm;"],"names":["Spinner","_jsx","className","children","UserForm","formData","setFormData","useState","name","email","password","isAdmin","id","useParams","navigate","useNavigate","dispatch","useDispatch","user","useSelector","state","auth","isLoading","isError","message","isSuccess","useEffect","reset","console","log","toast","error","getUserById","unwrap","then","catch","handleChange","e","value","target","type","checked","_objectSpread","_jsxs","onSubmit","preventDefault","updateUser","success","createUser","onChange","required","placeholder","htmlFor"],"sourceRoot":""}